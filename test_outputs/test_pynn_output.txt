initializing PyTorch...
generator null: False
 ... PyTorch initialized
Linear.__init__
linear nn.Linear(3 -> 5)
linear.weight 0.0128317333829 0.0241395687672 -0.0827712636956
0.0994344707744 -0.162469607123 -0.433968469727
0.114220317817 0.152916563211 -0.300684122658
0.225378331164 0.42435733681 0.197728028508
0.179218066432 -0.338907842981 -0.0265373972985
[torch.DoubleTensor of size 5x3]

linear.output [torch.DoubleTensor with no dimension]

linear.gradInput [torch.DoubleTensor with no dimension]

input 0.648856777931 0.593696637079 0.0640968924854
0.81420420506 0.37541891518 0.951782268239
0.36726917699 0.0386965882499 0.328513277927
0.367519449443 0.774648473831 0.678623967804
[torch.DoubleTensor of size 4x3]

output -0.480862090781 -0.608303724285 -0.112368242319 0.0537495592983 -0.348351779827
-0.557484367074 -0.941626458768 -0.393773384105 0.17390781302 -0.26829936124
-0.51975888801 -0.660880972635 -0.308905776514 -0.19294999633 -0.217740418469
-0.530969219663 -0.932362900959 -0.301610682902 0.188639688312 -0.47640645768
[torch.DoubleTensor of size 4x5]

gradInput -0.129808335831 0.210908268297 0.357445689604
-0.15464958051 0.244041590191 0.614687699199
-0.190176838155 0.0395036958321 0.390332308356
-0.176837681184 0.33405051787 0.589196579338
[torch.DoubleTensor of size 4x3]

criterion nn.ClassNLLCriterion
dir(linear) ['addBuffer', 'bias', 'gradBias', 'gradInput', 'gradWeight', 'output', 'weight']
output -0.480862090781 -0.608303724285 -0.112368242319 0.0537495592983 -0.348351779827
-0.557484367074 -0.941626458768 -0.393773384105 0.17390781302 -0.26829936124
-0.51975888801 -0.660880972635 -0.308905776514 -0.19294999633 -0.217740418469
-0.530969219663 -0.932362900959 -0.301610682902 0.188639688312 -0.47640645768
[torch.DoubleTensor of size 4x5]

Linear.__init__
got criterion
imagesTensor.size() 128 784
[torch.LongTensor of size 2]

labelsTensor.size() 128
[torch.LongTensor of size 1]

type(imagesTensor) <type 'PyTorch._DoubleTensor'>
start training...
epoch 0 accuracy: 50.0%
epoch 1 accuracy: 83.59375%
epoch 2 accuracy: 90.625%
epoch 3 accuracy: 93.75%
epoch 4 accuracy: 93.75%
epoch 5 accuracy: 100.0%
epoch 6 accuracy: 100.0%
epoch 7 accuracy: 100.0%
epoch 8 accuracy: 100.0%
epoch 9 accuracy: 100.0%
