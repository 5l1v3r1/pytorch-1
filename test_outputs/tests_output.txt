============================= test session starts ==============================
platform linux2 -- Python 2.7.6 -- py-1.4.30 -- pytest-2.7.2 -- /home/user/envs/bin/python
rootdir: /data/norep/git/pytorch, inifile: 
collecting ... initializing PyTorch...
generator null: False
 ... PyTorch initialized
collected 5 items

test/testByteTensor.py::test_byte_tensor test_byte_tensor
a : 1 4
1 4
1 1
[torch.ByteTensor of size 3x2]

a[1][1] = 9
a : 1 4
1 9
1 1
[torch.ByteTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

a + 2 : 3 6
3 11
3 3
[torch.ByteTensor of size 3x2]

a.resize2d(3,3)
a : 1 4 1
9 1 1
0 0 88
[torch.ByteTensor of size 3x3]

PASSED
test/testDoubleTensor.py::test_double_tensor dir(G) ['DoubleTensor', 'LongTensor']
test_double_tensor
got double a
a.dims() : 2
a : 0.936228756793 0.683851907263
0.947401972953 0.26405706536
0.82198396395 0.557182619115
[torch.DoubleTensor of size 3x2]

a[1][1] = 9
a : 0.936228756793 0.683851907263
0.947401972953 9.0
0.82198396395 0.557182619115
[torch.DoubleTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

a + 2 : 2.93622875679 2.68385190726
2.94740197295 11.0
2.82198396395 2.55718261912
[torch.DoubleTensor of size 3x2]

a.resize2d(3,3)
a : 0.936228756793 0.683851907263 0.947401972953
9.0 0.82198396395 0.557182619115
6.9208885292e-310 1.63041663128e-322 1.97266420445e-316
[torch.DoubleTensor of size 3x3]

size = LongTensor(2)
size[0] = 4
size[1] = 2
a.resize(size)
a : 0.936228756793 0.683851907263
0.947401972953 9.0
0.82198396395 0.557182619115
6.9208885292e-310 1.63041663128e-322
[torch.DoubleTensor of size 4x2]

DoubleTensor(3,4).uniform() : 0.0627634886187 0.260853828397 0.805808989098 0.0684759819414
0.380792641081 0.19239310571 0.294431370217 0.693148786668
0.0917908996344 0.0601435399149 0.481386303669 0.824954307871
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).bernoulli() : 0.0 1.0 0.0 0.0
0.0 0.0 1.0 0.0
0.0 0.0 1.0 0.0
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).normal() : 0.535084765106 0.59895457167 0.327660033611 0.131857531068
-0.580662299 -1.3471536881 0.246908997882 1.89481800334
1.27675089592 1.96446634401 0.112138632246 -0.119095712235
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).cauchy() : -0.791605421388 -3.08338478108 4.91012719688 -0.746157451631
-5.50165616982 -1.3304695557 1.27571516311 -12.3513353773
1.11989610325 -0.3459116461 2.85792450759 -0.251445845211
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).exponential() : 1.26479391361 1.19774912092 0.728633222762 0.212168467076
1.9023141822 0.294823881051 1.13371580438 0.0366571548596
2.16119449715 0.692503763139 1.990974618 0.769897461599
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).logNormal() : 2.09498501131 0.999685483445 1.40544602108 1.07943272723
2.65122833458 2.9573057496 0.918970999665 0.108081237843
0.0885039142381 0.447248543526 0.204711485815 4.51813515168
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).geometric() : 3.0 1.0 4.0 1.0
1.0 1.0 1.0 1.0
1.0 1.0 1.0 2.0
[torch.DoubleTensor of size 3x4]

PASSED
test/testFloatTensor.py::test_float_tensor dir(G) []
test_float_tensor
got float a
a.dims() : 2
a : 0.0731014 0.219527
0.72541 0.900681
0.82925 0.120099
[torch.FloatTensor of size 3x2]

a[1][1] = 9
a : 0.0731014 0.219527
0.72541 9
0.82925 0.120099
[torch.FloatTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

PASSED
test/testLongTensor.py::test_long_tensor test_long_tensor
a : 1 1
1 1
1 2
[torch.LongTensor of size 3x2]

a[1][1] = 9
a : 1 1
1 9
1 2
[torch.LongTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

a + 2 : 3 3
3 11
3 4
[torch.LongTensor of size 3x2]

a.resize2d(3,3)
a : 1 1 1
9 1 2
140080404585088 177 140080634275928
[torch.LongTensor of size 3x3]

PASSED
test/test_pytorch.py::test_pytorch C [[ 0.44017208  0.33193928  1.17951548  1.22799063]
 [ 0.32220519  0.24214436  0.70213956  0.74706656]
 [ 0.32118094  0.24369793  1.14882231  1.16731906]]
calling .asTensor...
 ... asTensor called
tensorA 0.462656 0.885258
0.173668 0.651589
0.632419 0.639547
[torch.FloatTensor of size 3x2]

tensorA 0.462656 0.885258
0.173668 56.4
76.5 0.639547
[torch.FloatTensor of size 3x2]

A [[  0.46265623   0.8852579 ]
 [  0.17366792  56.40000153]
 [ 76.5          0.63954723]]
add 5 to tensorA
tensorA 5.46266 5.88526
5.17367 61.4
81.5 5.63955
[torch.FloatTensor of size 3x2]

A [[  5.46265602   5.88525772]
 [  5.17366791  61.40000153]
 [ 81.5          5.63954735]]
add 7 to tensorA
tensorA2 12.4627 12.8853
12.1737 68.4
88.5 12.6395
[torch.FloatTensor of size 3x2]

tensorA 5.46266 5.88526
5.17367 61.4
81.5 5.63955
[torch.FloatTensor of size 3x2]

tensorAB 2.95177 2.2379 10.2165 10.4065
30.2423 22.6715 55.028 59.8817
3.64247 3.13972 85.6753 81.631
[torch.FloatTensor of size 3x4]

A.dot(B) [[  2.95176935   2.23790431  10.2164917   10.40648651]
 [ 30.2423439   22.67150879  55.02795792  59.88165665]
 [  3.64246845   3.13971949  85.67529297  81.63102722]]
tensorA[2] 81.5 5.63955
[torch.FloatTensor of size 2]

D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.FloatTensor of size 5x3]

0.3585 0.279065 0.23992 0.858432
0.603308 0.135431 0.423218 0.113045
0.435506 0.865921 0.190006 0.0986441
[torch.FloatTensor of size 3x4]

0 0 1 0
0 0 1 0
0 1 0 0
[torch.FloatTensor of size 3x4]

-0.401024 -2.16109 -1.01926 0.388205
-1.06624 -0.128249 0.351778 -1.75443
0.0699609 -1.33921 -0.101758 -0.261022
[torch.FloatTensor of size 3x4]

0.88 1.37639 -6.60934 3.47858
0.711336 0.0491349 0.175683 -0.571601
0.303794 -3.91894 0.399302 11.531
[torch.FloatTensor of size 3x4]

0.850237 0.429402 0.689031 0.478225
1.0368 0.111044 1.13813 2.21666
0.275946 0.258947 0.143115 0.230646
[torch.FloatTensor of size 3x4]

0.282239 7.06642 0.0605614 0.253094
0.316726 0.605762 2.77819 0.0485947
1.91896 0.064432 1.45438 4.41983
[torch.FloatTensor of size 3x4]

1 1 8 5
4 3 1 1
3 2 2 3
[torch.FloatTensor of size 3x4]

1 2 2 6
2 3 2 1
2 2 5 3
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

<class 'floattensor.FloatTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.FloatTensor of size 4x3]

resize1d -1 -1 -1
[torch.FloatTensor of size 3]

resize2d -1 -1 -1
-1 -1 -1
[torch.FloatTensor of size 2x3]

resize -1 -1 -1
-1 -1 -1
-1 -1 -1
-1 -1 -1
[torch.FloatTensor of size 4x3]

PyTorch.FloatTensor(3,2).nElement() : 6
PyTorch.FloatTensor().nElement() : 0
PyTorch.FloatTensor(1).nElement() : 1
PASSED

=========================== 5 passed in 0.49 seconds ===========================
