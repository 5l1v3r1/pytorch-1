============================= test session starts ==============================
platform linux2 -- Python 2.7.6 -- py-1.4.30 -- pytest-2.7.2 -- /home/user/envs/bin/python
rootdir: /data/norep/git/pytorch, inifile: pytest.ini
collecting ... initializing PyTorch...
generator null: False
 ... PyTorch initialized
collected 6 items

test/testByteTensor.py::test_byte_tensor test_byte_tensor
a : 1 1
2 1
2 5
[torch.ByteTensor of size 3x2]

a[1][1] = 9
a : 1 1
2 9
2 5
[torch.ByteTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

a + 2 : 3 3
4 11
4 7
[torch.ByteTensor of size 3x2]

a.resize2d(3,3)
a : 1 1 2
9 2 5
0 0 100
[torch.ByteTensor of size 3x3]

PASSED
test/testDoubleTensor.py::test_double_tensor dir(G) ['DoubleTensor', 'LongTensor']
test_double_tensor
got double a
a.dims() : 2
a : 0.0314708440565 0.0322312850039
0.679298827657 0.0811589802615
0.52409378998 0.555543276248
[torch.DoubleTensor of size 3x2]

a[1][1] = 9
a : 0.0314708440565 0.0322312850039
0.679298827657 9.0
0.52409378998 0.555543276248
[torch.DoubleTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

a + 2 : 2.03147084406 2.032231285
2.67929882766 11.0
2.52409378998 2.55554327625
[torch.DoubleTensor of size 3x2]

a.resize2d(3,3)
a : 0.0314708440565 0.0322312850039 0.679298827657
9.0 0.52409378998 0.555543276248
6.87284092933e-90 1.41463075037e+190 3.93205800329e-317
[torch.DoubleTensor of size 3x3]

size = LongTensor(2)
size[0] = 4
size[1] = 2
a.resize(size)
a : 0.0314708440565 0.0322312850039
0.679298827657 9.0
0.52409378998 0.555543276248
6.87284092933e-90 1.41463075037e+190
[torch.DoubleTensor of size 4x2]

DoubleTensor(3,4).uniform() : 0.669292188017 0.139130958356 0.133769337554 0.873516931897
0.541368378792 0.541451784084 0.402312911116 0.504412408918
0.954660369083 0.317341047805 0.426069132285 0.86698645819
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).bernoulli() : 1.0 0.0 1.0 1.0
0.0 0.0 0.0 1.0
0.0 0.0 0.0 1.0
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).normal() : 1.96963245624 0.566273403526 -1.53627151806 0.0721874051035
-1.98302084627 0.553057586815 0.267172123364 -0.170507420383
-0.216601744716 2.20654776867 -1.4719286686 0.00175818147053
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).cauchy() : -0.422436896819 0.577195124796 -0.158518412221 -1.00382896934
-0.096589390289 -0.544601143821 -0.755762972695 -0.713087891957
-1.96654200014 -6.45874898825 -2.27470339477 -0.107640608176
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).exponential() : 0.102972086826 2.27775591659 0.854016019133 0.602566760762
0.130875093846 1.73610031321 0.134492933087 2.29912578242
0.00391422305622 0.500762769572 1.80285169872 0.340739621885
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).logNormal() : 1.8166339643 0.167338746901 0.764920933436 0.477186046478
0.0641212969712 0.398470616968 0.885029134289 0.563850471906
2.16656544665 0.0223257269584 1.05503474895 0.403239855205
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).geometric() : 1.0 2.0 1.0 2.0
1.0 1.0 1.0 1.0
1.0 1.0 1.0 1.0
[torch.DoubleTensor of size 3x4]

PASSED
test/testFloatTensor.py::test_float_tensor dir(G) []
test_float_tensor
got float a
a.dims() : 2
a : 0.158064 0.096771
0.981547 0.44902
0.457333 0.0114649
[torch.FloatTensor of size 3x2]

a[1][1] = 9
a : 0.158064 0.096771
0.981547 9
0.457333 0.0114649
[torch.FloatTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

PASSED
test/testLongTensor.py::test_long_tensor test_long_tensor
a : 5 1
1 1
2 7
[torch.LongTensor of size 3x2]

a[1][1] = 9
a : 5 1
1 9
2 7
[torch.LongTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

a + 2 : 7 3
3 11
4 9
[torch.LongTensor of size 3x2]

a.resize2d(3,3)
a : 5 1 1
9 2 7
139946330983656 139946330983760 80
[torch.LongTensor of size 3x3]

PASSED
test/test_pynn.py::test_pynn Linear.__init__
linear nn.Linear(3 -> 5)
linear.weight -0.194924174333 -0.137107634023 -0.506864124483
0.43004615119 0.189197798429 -0.527216161151
0.142978270627 -0.271601114736 -0.51130571836
-0.133616168052 -0.567264337003 -0.438097469404
-0.186614607998 0.123308178943 -0.185437237329
[torch.DoubleTensor of size 5x3]

linear.output [torch.DoubleTensor with no dimension]

linear.gradInput [torch.DoubleTensor with no dimension]

input 0.156599931186 0.272983083734 0.00763454451226
0.0192320973147 0.645428577671 0.261819202453
0.781939807581 0.226747920038 0.284550163429
0.744657370728 0.231380301761 0.806168874493
[torch.DoubleTensor of size 4x3]

output 0.319571663082 0.289440640467 -0.309077511575 0.373008011292 0.470873458136
0.166445770099 0.166821740118 -0.559840807357 0.0687298732745 0.495298577479
0.0636584051627 0.403623666746 -0.348698514949 0.194364020872 0.297124261054
-0.194099292811 0.113461120262 -0.621993883105 -0.0318020650369 0.207925386228
[torch.DoubleTensor of size 4x5]

gradInput -0.119722544159 -0.0586399795773 -0.407275434503
-0.142361699674 0.182881067208 -0.00802388419782
0.0298940285305 0.0887256353044 -0.207019825054
-0.0368560916559 0.260692399044 0.331967756087
[torch.DoubleTensor of size 4x3]

criterion nn.ClassNLLCriterion
dir(linear) ['addBuffer', 'bias', 'gradBias', 'gradInput', 'gradWeight', 'output', 'weight']
output 0.319571663082 0.289440640467 -0.309077511575 0.373008011292 0.470873458136
0.166445770099 0.166821740118 -0.559840807357 0.0687298732745 0.495298577479
0.0636584051627 0.403623666746 -0.348698514949 0.194364020872 0.297124261054
-0.194099292811 0.113461120262 -0.621993883105 -0.0318020650369 0.207925386228
[torch.DoubleTensor of size 4x5]

Linear.__init__
got criterion
imagesTensor.size() 128 784
[torch.LongTensor of size 2]

labelsTensor.size() 128
[torch.LongTensor of size 1]

type(imagesTensor) <type 'PyTorch._DoubleTensor'>
start training...
epoch 0 accuracy: 50.0%
epoch 1 accuracy: 82.03125%
epoch 2 accuracy: 89.84375%
epoch 3 accuracy: 93.75%
epoch 4 accuracy: 94.53125%
epoch 5 accuracy: 97.65625%
epoch 6 accuracy: 98.4375%
epoch 7 accuracy: 100.0%
epoch 8 accuracy: 100.0%
epoch 9 accuracy: 100.0%
PASSED
test/test_pytorch.py::test_pytorch C [[ 0.99521989  0.89834136  0.01764146  0.16116282]
 [ 0.93747246  0.85597396  0.01587025  0.14644499]
 [ 0.30060273  0.16248214  0.0136677   0.10854101]]
calling .asTensor...
 ... asTensor called
tensorA 0.860863 0.285782
0.827361 0.251295
0.0765226 0.286048
[torch.FloatTensor of size 3x2]

tensorA 0.860863 0.285782
0.827361 56.4
76.5 0.286048
[torch.FloatTensor of size 3x2]

A [[  0.86086303   0.28578189]
 [  0.8273614   56.40000153]
 [ 76.5          0.28604829]]
add 5 to tensorA
tensorA 5.86086 5.28578
5.82736 61.4
81.5 5.28605
[torch.FloatTensor of size 3x2]

A [[  5.86086321   5.28578186]
 [  5.82736158  61.40000153]
 [ 81.5          5.28604841]]
add 7 to tensorA
tensorA2 12.8609 12.2858
12.8274 68.4
88.5 12.286
[torch.FloatTensor of size 3x2]

tensorA 5.86086 5.28578
5.82736 61.4
81.5 5.28605
[torch.FloatTensor of size 3x2]

tensorAB 9.4941 7.17489 0.27516 2.30458
55.1354 24.9324 2.8799 22.5859
76.5018 78.1469 0.659581 7.38863
[torch.FloatTensor of size 3x4]

A.dot(B) [[  9.49409962   7.17489195   0.27515987   2.30457592]
 [ 55.13537216  24.93244171   2.87989831  22.58589172]
 [ 76.50175476  78.14689636   0.65958095   7.38862896]]
tensorA[2] 81.5 5.28605
[torch.FloatTensor of size 2]

D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.FloatTensor of size 5x3]

0.431435 0.308059 0.62849 0.210867
0.345427 0.583771 0.0407563 0.763604
0.121616 0.0937359 0.704416 0.837556
[torch.FloatTensor of size 3x4]

0 1 0 0
1 0 0 0
0 0 0 0
[torch.FloatTensor of size 3x4]

-0.581399 2.3645 0.286156 0.6749
0.268016 0.101317 -1.62367 0.652135
-0.362191 0.0525058 -0.654577 -0.408145
[torch.FloatTensor of size 3x4]

3.30153 -0.5843 -0.74358 0.726196
1.04757 -0.207933 -1.48374 3.27171
1.37219 -0.466481 11.7729 -2.34127
[torch.FloatTensor of size 3x4]

0.0399555 0.240855 0.927888 0.690387
1.19151 0.460023 2.8662 1.48534
0.246062 1.788 0.694136 0.433362
[torch.FloatTensor of size 3x4]

0.330652 6.81976 0.282424 0.29654
0.386591 1.05825 1.51153 0.0844646
1.74177 0.32802 0.114701 0.0447995
[torch.FloatTensor of size 3x4]

1 1 1 1
2 2 3 1
3 3 3 3
[torch.FloatTensor of size 3x4]

1 2 1 1
3 1 2 1
1 1 6 3
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

<class 'floattensor.FloatTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.FloatTensor of size 4x3]

resize1d -1 -1 -1
[torch.FloatTensor of size 3]

resize2d -1 -1 -1
-1 -1 -1
[torch.FloatTensor of size 2x3]

resize -1 -1 -1
-1 -1 -1
-1 -1 -1
-1 -1 -1
[torch.FloatTensor of size 4x3]

PyTorch.FloatTensor(3,2).nElement() : 6
PyTorch.FloatTensor().nElement() : 0
PyTorch.FloatTensor(1).nElement() : 1
PASSED

========================== 6 passed in 20.08 seconds ===========================
