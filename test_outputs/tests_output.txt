============================= test session starts ==============================
platform linux2 -- Python 2.7.6 -- py-1.4.30 -- pytest-2.7.2 -- /home/user/envs/bin/python
rootdir: /data/norep/git/pytorch, inifile: 
collecting ... initializing PyTorch...
generator null: False
 ... PyTorch initialized
collected 9 items

test/testByteTensor.py::test_byte_tensor test_byte_tensor
a : 2 1
4 3
1 1
[torch.ByteTensor of size 3x2]

a[1][1] = 9
a : 2 1
4 9
1 1
[torch.ByteTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

a + 2 : 4 3
6 11
3 3
[torch.ByteTensor of size 3x2]

a.resize2d(3,3)
a : 2 1 4
9 1 1
0 0 240
[torch.ByteTensor of size 3x3]

PASSED
test/testDoubleTensor.py::test_double_tensor dir(G) ['DoubleTensor', 'LongTensor']
test_double_tensor
got double a
a.dims() : 2
a : 0.601333871251 0.659931240836
0.798867255682 0.994369741529
0.92014283035 0.606570360484
[torch.DoubleTensor of size 3x2]

a[1][1] = 9
a : 0.601333871251 0.659931240836
0.798867255682 9.0
0.92014283035 0.606570360484
[torch.DoubleTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

a + 2 : 2.60133387125 2.65993124084
2.79886725568 11.0
2.92014283035 2.60657036048
[torch.DoubleTensor of size 3x2]

a.resize2d(3,3)
a : 0.601333871251 0.659931240836 0.798867255682
9.0 0.92014283035 0.606570360484
6.90557922031e-310 6.90557922031e-310 3.95252516673e-322
[torch.DoubleTensor of size 3x3]

size = LongTensor(2)
size[0] = 4
size[1] = 2
a.resize(size)
a : 0.601333871251 0.659931240836
0.798867255682 9.0
0.92014283035 0.606570360484
6.90557922031e-310 6.90557922031e-310
[torch.DoubleTensor of size 4x2]

DoubleTensor(3,4).uniform() : 0.893874796107 0.704047185602 0.339660373051 0.36513611488
0.996150623541 0.895222670864 0.467444188427 0.261191017926
0.233007473638 0.368245726917 0.672933057882 0.678909378126
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).bernoulli() : 0.0 1.0 0.0 1.0
1.0 0.0 1.0 0.0
1.0 0.0 1.0 0.0
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).normal() : -1.02778574975 0.145170471509 0.781593234979 0.0540481952142
0.881843276661 0.2254526507 -0.229966392251 0.273467216093
0.823190195823 -0.0252466211328 0.53648097249 1.84514799099
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).cauchy() : -1.54384265068 -0.138835698009 -0.383728979726 0.837474142784
-0.259666428025 2.29368359739 -1.56684828927 2.26071811985
0.252717086632 0.463414067191 2.12078272351 0.830905943217
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).exponential() : 0.389102890858 1.21212076456 2.31433196196 0.50013946669
1.01362892118 0.32948865231 1.38794110061 0.381854135537
1.25125457587 0.271533337096 0.0302222773568 0.293399828093
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).logNormal() : 0.614100017225 0.193464921677 0.0626487340509 1.02377227464
0.0741836314097 0.711776941806 2.42742283782 0.16911627987
0.439255788638 0.201156298436 0.0544195965675 0.983020047906
[torch.DoubleTensor of size 3x4]

DoubleTensor(3,4).geometric() : 2.0 2.0 1.0 3.0
1.0 2.0 1.0 1.0
1.0 1.0 4.0 1.0
[torch.DoubleTensor of size 3x4]

PASSED
test/testFloatTensor.py::test_float_tensor dir(G) []
test_float_tensor
got float a
a.dims() : 2
a : 0.457703 0.58087
0.206818 0.123959
0.952333 0.852556
[torch.FloatTensor of size 3x2]

a[1][1] = 9
a : 0.457703 0.58087
0.206818 9
0.952333 0.852556
[torch.FloatTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

PASSED
test/testLongTensor.py::test_long_tensor test_long_tensor
a : 1 1
1 4
1 1
[torch.LongTensor of size 3x2]

a[1][1] = 9
a : 1 1
1 9
1 1
[torch.LongTensor of size 3x2]

a.size() : 3 2
[torch.LongTensor of size 2]

a + 2 : 3 3
3 11
3 3
[torch.LongTensor of size 3x2]

a.resize2d(3,3)
a : 1 1 1
9 1 1
139770492052664 129 33564192
[torch.LongTensor of size 3x3]

PASSED
test/test_pynn.py::test_pynn Linear.__init__
linear nn.Linear(3 -> 5)
linear.weight -0.503534917622 0.397314749744 -0.329992694916
-0.145860033672 0.160625846843 -0.222655126514
-0.215476905398 -0.383496901045 0.434638534512
0.066907295603 0.542604711081 0.0254062892047
-0.288803956065 -0.180973072715 0.373734992394
[torch.DoubleTensor of size 5x3]

linear.output [torch.DoubleTensor with no dimension]

linear.gradInput [torch.DoubleTensor with no dimension]

input 0.661324824207 0.937006060034 0.486498072511
0.236732784892 0.806376237189 0.882197369821
0.836822573328 0.741759377997 0.612882368034
0.524400847033 0.125782232266 0.858070268529
[torch.DoubleTensor of size 4x3]

output -0.587987733317 -0.536064376129 -0.446549764947 0.36799984796 0.353002544892
-0.556669848646 -0.58322037 -0.132977691324 0.278764436377 0.647153559859
-0.79563725885 -0.62116425868 -0.35455749434 0.277011114205 0.384886726377
-0.963969032186 -0.729128608836 0.0555556086742 -0.0718949650713 0.678225931804
[torch.DoubleTensor of size 4x5]

gradInput 0.393157227411 -0.0126770465192 0.260580316753
0.225775736879 -0.229715346688 0.504703060584
0.475010388233 -0.199268351075 0.397639002321
0.379087210122 -0.683172596422 0.756243748919
[torch.DoubleTensor of size 4x3]

criterion nn.ClassNLLCriterion
dir(linear) ['addBuffer', 'bias', 'gradBias', 'gradInput', 'gradWeight', 'output', 'weight']
output -0.587987733317 -0.536064376129 -0.446549764947 0.36799984796 0.353002544892
-0.556669848646 -0.58322037 -0.132977691324 0.278764436377 0.647153559859
-0.79563725885 -0.62116425868 -0.35455749434 0.277011114205 0.384886726377
-0.963969032186 -0.729128608836 0.0555556086742 -0.0718949650713 0.678225931804
[torch.DoubleTensor of size 4x5]

Linear.__init__
got criterion
imagesTensor.size() 128 784
[torch.LongTensor of size 2]

labelsTensor.size() 128
[torch.LongTensor of size 1]

type(imagesTensor) <type 'PyTorch._DoubleTensor'>
start training...
epoch 0 accuracy: 46.875%
epoch 1 accuracy: 85.15625%
epoch 2 accuracy: 91.40625%
epoch 3 accuracy: 95.3125%
epoch 4 accuracy: 98.4375%
epoch 5 accuracy: 97.65625%
epoch 6 accuracy: 93.75%
epoch 7 accuracy: 98.4375%
epoch 8 accuracy: 100.0%
epoch 9 accuracy: 100.0%
PASSED
test/test_pytorch.py::test_pytorchDouble D 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 5x3]

D 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 4.0
1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 5x3]

D 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 4.0
9.0 9.0 9.0
1.0 1.0 1.0
[torch.DoubleTensor of size 5x3]

D 1.0 1.0 0.0
1.0 1.0 0.0
1.0 1.0 0.0
9.0 9.0 0.0
1.0 1.0 0.0
[torch.DoubleTensor of size 5x3]

0.84555560071 0.608579927357 0.721114265732 0.538150932407
0.367487758864 0.985377421835 0.96832419862 0.317290422274
0.324914903147 0.45834361529 0.708689980209 0.309259391157
[torch.DoubleTensor of size 3x4]

0.378749666913 -0.580125933227 0.50035486232 -1.6441548653
-0.487867987481 0.412618816006 0.149540328869 1.41052435107
0.434651929951 -1.94047495404 -0.301901128059 -0.976326064943
[torch.DoubleTensor of size 3x4]

3.45245603723 5.50880343215 1.67221896277 -1.7020942654
0.29514505591 1.52626563008 0.784574553053 0.836905545954
1.04531351051 81.394134028 -0.108744016136 -25.1146236434
[torch.DoubleTensor of size 3x4]

0.555246861686 4.11260432156 0.742519417973 0.0767661565804
0.0707046793349 0.218003010938 1.20551893413 0.662749753745
0.477666843156 0.449176226227 4.48941234438 0.995210086527
[torch.DoubleTensor of size 3x4]

0.373231280899 0.331354499026 0.0307730280271 0.0862122979908
0.00905915959882 0.068875059436 0.889537970442 2.44891909728
0.0861200895382 0.206331336328 0.0624240357933 0.420917266824
[torch.DoubleTensor of size 3x4]

0.0 0.0 0.0 1.0
1.0 1.0 0.0 0.0
1.0 0.0 0.0 1.0
[torch.DoubleTensor of size 3x4]

1.0 3.0 1.0 1.0
2.0 1.0 1.0 2.0
1.0 1.0 1.0 1.0
[torch.DoubleTensor of size 3x4]

2.0 1.0 3.0 2.0
1.0 1.0 2.0 1.0
2.0 1.0 1.0 2.0
[torch.DoubleTensor of size 3x4]

2.0 1.0 2.0 3.0
1.0 1.0 2.0 2.0
4.0 1.0 4.0 1.0
[torch.DoubleTensor of size 3x4]

2.0 1.0 2.0 3.0
1.0 1.0 2.0 2.0
4.0 1.0 4.0 1.0
[torch.DoubleTensor of size 3x4]

<class 'floattensor.DoubleTensor'>
D after resize:
 1.0 1.0 0.0
1.0 1.0 0.0
1.0 1.0 0.0
9.0 9.0 0.0
[torch.DoubleTensor of size 4x3]

resize1d 1.0 1.0 1.0
[torch.DoubleTensor of size 3]

resize2d 1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 2x3]

resize 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 4x3]

PyTorch.DoubleTensor(3,2).nElement() : 6
PyTorch.DoubleTensor().nElement() : 0
PyTorch.DoubleTensor(1).nElement() : 1
PASSED
test/test_pytorch.py::test_pytorchByte D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.ByteTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.ByteTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.ByteTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.ByteTensor of size 5x3]

1 1 1 1
1 1 1 0
1 1 1 1
[torch.ByteTensor of size 3x4]

2 1 1 1
2 1 2 4
1 3 2 6
[torch.ByteTensor of size 3x4]

1 1 1 2
1 1 2 2
1 1 1 1
[torch.ByteTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.ByteTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.ByteTensor of size 3x4]

<class 'floattensor.ByteTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.ByteTensor of size 4x3]

resize1d 1 1 1
[torch.ByteTensor of size 3]

resize2d 1 1 1
1 1 1
[torch.ByteTensor of size 2x3]

resize 1 1 1
1 1 1
1 1 1
1 1 1
[torch.ByteTensor of size 4x3]

PyTorch.ByteTensor(3,2).nElement() : 6
PyTorch.ByteTensor().nElement() : 0
PyTorch.ByteTensor(1).nElement() : 1
PASSED
test/test_pytorch.py::test_pytorchFloat C [[ 0.13553444  0.38178751  0.50224221  0.4383522 ]
 [ 0.27313551  0.23183122  0.27347478  0.25619239]
 [ 0.34198257  0.30975094  0.36918017  0.34350127]]
calling .asTensor...
 ... asTensor called
tensorA 0.816076 0.116552
0.335979 0.438955
0.468097 0.542202
[torch.FloatTensor of size 3x2]

tensorA 0.816076 0.116552
0.335979 56.4
76.5 0.542202
[torch.FloatTensor of size 3x2]

A [[  0.8160758    0.11655198]
 [  0.33597928  56.40000153]
 [ 76.5          0.54220217]]
add 5 to tensorA
tensorA 5.81608 5.11655
5.33598 61.4
81.5 5.5422
[torch.FloatTensor of size 3x2]

A [[  5.8160758    5.11655188]
 [  5.33597946  61.40000153]
 [ 81.5          5.542202  ]]
add 7 to tensorA
tensorA2 12.8161 12.1166
12.336 68.4
88.5 12.5422
[torch.FloatTensor of size 3x2]

tensorA 5.81608 5.11655
5.33598 61.4
81.5 5.5422
[torch.FloatTensor of size 3x2]

tensorAB 3.34842 3.53927 4.31061 3.95417
34.5941 14.0741 13.629 14.6104
10.146 36.9642 49.1177 42.5965
[torch.FloatTensor of size 3x4]

A.dot(B) [[  3.34841895   3.53927135   4.31061268   3.95416856]
 [ 34.59410858  14.07409096  13.62902451  14.6104269 ]
 [ 10.14597416  36.96418762  49.117733    42.59645844]]
tensorA[2] 81.5 5.5422
[torch.FloatTensor of size 2]

D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.FloatTensor of size 5x3]

0.125585 0.0406307 0.207243 0.247888
0.0514672 0.0935515 0.44081 0.694824
0.0298762 0.14537 0.456833 0.453172
[torch.FloatTensor of size 3x4]

-0.41263 -0.561561 -0.166406 0.919743
-0.520665 -1.04209 -1.86076 -1.19507
1.68462 0.255782 -2.51445 -0.97466
[torch.FloatTensor of size 3x4]

-0.943492 -0.31674 -0.273227 0.167324
-0.808787 -0.696445 0.694108 0.279047
-0.189283 -0.854515 -1.86217 -0.143578
[torch.FloatTensor of size 3x4]

0.786687 1.41744 1.51556 1.70139
0.365807 0.297847 0.250975 2.23554
0.490976 1.26735 2.75488 0.0208299
[torch.FloatTensor of size 3x4]

0.897022 0.402322 0.26393 0.165471
2.96383 0.119081 0.922968 0.155653
0.171086 1.12825 1.33951 0.916772
[torch.FloatTensor of size 3x4]

0 0 0 0
1 1 1 1
1 0 1 0
[torch.FloatTensor of size 3x4]

1 2 1 1
1 2 3 2
2 3 1 3
[torch.FloatTensor of size 3x4]

1 1 1 1
1 3 1 1
2 3 1 2
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

<class 'floattensor.FloatTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.FloatTensor of size 4x3]

resize1d 1 1 1
[torch.FloatTensor of size 3]

resize2d 1 1 1
1 1 1
[torch.FloatTensor of size 2x3]

resize 1 1 1
1 1 1
1 1 1
1 1 1
[torch.FloatTensor of size 4x3]

PyTorch.FloatTensor(3,2).nElement() : 6
PyTorch.FloatTensor().nElement() : 0
PyTorch.FloatTensor(1).nElement() : 1
PASSED
test/test_pytorch.py::test_pytorchLong D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.LongTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.LongTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.LongTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.LongTensor of size 5x3]

1 1 1 1
1 1 1 0
1 1 1 1
[torch.LongTensor of size 3x4]

2 1 1 1
2 1 2 4
1 3 2 6
[torch.LongTensor of size 3x4]

1 1 1 2
1 1 2 2
1 1 1 1
[torch.LongTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.LongTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.LongTensor of size 3x4]

<class 'floattensor.LongTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.LongTensor of size 4x3]

resize1d 1 1 1
[torch.LongTensor of size 3]

resize2d 1 1 1
1 1 1
[torch.LongTensor of size 2x3]

resize 1 1 1
1 1 1
1 1 1
1 1 1
[torch.LongTensor of size 4x3]

PyTorch.LongTensor(3,2).nElement() : 6
PyTorch.LongTensor().nElement() : 0
PyTorch.LongTensor(1).nElement() : 1
PASSED

========================== 9 passed in 17.98 seconds ===========================
