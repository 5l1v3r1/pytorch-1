initializing PyTorch...
generator null: False
 ... PyTorch initialized
D 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 5x3]

D 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 4.0
1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 5x3]

D 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 4.0
9.0 9.0 9.0
1.0 1.0 1.0
[torch.DoubleTensor of size 5x3]

D 1.0 1.0 0.0
1.0 1.0 0.0
1.0 1.0 0.0
9.0 9.0 0.0
1.0 1.0 0.0
[torch.DoubleTensor of size 5x3]

0.77979284199 0.260724459775 0.410021554679 0.0962660296354
0.92871726444 0.235002687201 0.389896526467 0.765262620756
0.899975927547 0.713078108151 0.383632251061 0.0525675055105
[torch.DoubleTensor of size 3x4]

-1.20821559583 0.838912534111 0.696526507537 -1.23383204863
1.79547541609 -1.41882293257 -0.0893899549403 0.288212548739
-0.17835345623 0.894592161244 0.431998617269 0.208709966277
[torch.DoubleTensor of size 3x4]

1.04057513781 -0.390954152477 0.206340307442 1.84685608129
-0.400927395153 -0.174402360852 3.90162265621 0.296262782704
5.66091602199 -2.08033572622 0.80634313595 -9.44782574662
[torch.DoubleTensor of size 3x4]

1.68226515878 0.655657283528 0.0638654030011 1.67409443041
0.631343835568 0.710292436014 0.487844950714 3.58136279973
3.55102908146 0.537819752443 0.361948071966 0.996492361311
[torch.DoubleTensor of size 3x4]

1.85993732877 0.616342690972 0.191792059183 0.131062604013
0.299288754377 1.02963940003 0.205853110967 0.472556276424
1.08377471039 0.981530835176 0.067126815905 0.861199083526
[torch.DoubleTensor of size 3x4]

0.0 1.0 0.0 1.0
0.0 0.0 0.0 1.0
0.0 1.0 0.0 1.0
[torch.DoubleTensor of size 3x4]

1.0 1.0 2.0 2.0
2.0 2.0 1.0 1.0
3.0 4.0 3.0 1.0
[torch.DoubleTensor of size 3x4]

3.0 1.0 1.0 4.0
1.0 2.0 1.0 1.0
2.0 1.0 3.0 8.0
[torch.DoubleTensor of size 3x4]

2.0 1.0 2.0 3.0
1.0 1.0 2.0 2.0
4.0 1.0 4.0 1.0
[torch.DoubleTensor of size 3x4]

2.0 1.0 2.0 3.0
1.0 1.0 2.0 2.0
4.0 1.0 4.0 1.0
[torch.DoubleTensor of size 3x4]

<class 'floattensor.DoubleTensor'>
D after resize:
 1.0 1.0 0.0
1.0 1.0 0.0
1.0 1.0 0.0
9.0 9.0 0.0
[torch.DoubleTensor of size 4x3]

resize1d 1.0 1.0 1.0
[torch.DoubleTensor of size 3]

resize2d 1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 2x3]

resize 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 4x3]

PyTorch.DoubleTensor(3,2).nElement() : 6
PyTorch.DoubleTensor().nElement() : 0
PyTorch.DoubleTensor(1).nElement() : 1
D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.ByteTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.ByteTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.ByteTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.ByteTensor of size 5x3]

1 1 1 1
1 1 1 0
1 1 1 1
[torch.ByteTensor of size 3x4]

2 1 1 1
2 1 2 4
1 3 2 6
[torch.ByteTensor of size 3x4]

1 1 1 2
1 1 2 2
1 1 1 1
[torch.ByteTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.ByteTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.ByteTensor of size 3x4]

<class 'floattensor.ByteTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.ByteTensor of size 4x3]

resize1d 1 1 1
[torch.ByteTensor of size 3]

resize2d 1 1 1
1 1 1
[torch.ByteTensor of size 2x3]

resize 1 1 1
1 1 1
1 1 1
1 1 1
[torch.ByteTensor of size 4x3]

PyTorch.ByteTensor(3,2).nElement() : 6
PyTorch.ByteTensor().nElement() : 0
PyTorch.ByteTensor(1).nElement() : 1
C [[ 1.08521485  0.44534269  0.47179121  0.77561873]
 [ 1.21685338  0.57266104  0.73183584  0.80068278]
 [ 1.13386834  0.48040271  0.53470832  0.796179  ]]
calling .asTensor...
 ... asTensor called
tensorA 0.227932 0.910588
0.698706 0.587266
0.329402 0.862085
[torch.FloatTensor of size 3x2]

tensorA 0.227932 0.910588
0.698706 56.4
76.5 0.862085
[torch.FloatTensor of size 3x2]

A [[  0.22793175   0.91058779]
 [  0.69870591  56.40000153]
 [ 76.5          0.86208546]]
add 5 to tensorA
tensorA 5.22793 5.91059
5.69871 61.4
81.5 5.86209
[torch.FloatTensor of size 3x2]

A [[  5.22793198   5.91058779]
 [  5.69870567  61.40000153]
 [ 81.5          5.86208534]]
add 7 to tensorA
tensorA2 12.2279 12.9106
12.6987 68.4
88.5 12.8621
[torch.FloatTensor of size 3x2]

tensorA 5.22793 5.91059
5.69871 61.4
81.5 5.86209
[torch.FloatTensor of size 3x2]

tensorAB 10.5565 4.8301 5.96736 7.07593
64.1134 25.0256 24.3179 47.0326
81.9793 44.2749 65.0613 48.5795
[torch.FloatTensor of size 3x4]

A.dot(B) [[ 10.55648327   4.83009624   5.96735573   7.07593155]
 [ 64.11338043  25.02560425  24.31791687  47.03256226]
 [ 81.97928619  44.27489471  65.06127167  48.57947922]]
tensorA[2] 81.5 5.86209
[torch.FloatTensor of size 2]

D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.FloatTensor of size 5x3]

0.125585 0.0406307 0.207243 0.247888
0.0514672 0.0935515 0.44081 0.694824
0.0298762 0.14537 0.456833 0.453172
[torch.FloatTensor of size 3x4]

-0.41263 -0.561561 -0.166406 0.919743
-0.520665 -1.04209 -1.86076 -1.19507
1.68462 0.255782 -2.51445 -0.97466
[torch.FloatTensor of size 3x4]

-0.943492 -0.31674 -0.273227 0.167324
-0.808787 -0.696445 0.694108 0.279047
-0.189283 -0.854515 -1.86217 -0.143578
[torch.FloatTensor of size 3x4]

0.786687 1.41744 1.51556 1.70139
0.365807 0.297847 0.250975 2.23554
0.490976 1.26735 2.75488 0.0208299
[torch.FloatTensor of size 3x4]

0.897022 0.402322 0.26393 0.165471
2.96383 0.119081 0.922968 0.155653
0.171086 1.12825 1.33951 0.916772
[torch.FloatTensor of size 3x4]

0 0 0 0
1 1 1 1
1 0 1 0
[torch.FloatTensor of size 3x4]

1 2 1 1
1 2 3 2
2 3 1 3
[torch.FloatTensor of size 3x4]

1 1 1 1
1 3 1 1
2 3 1 2
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

<class 'floattensor.FloatTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.FloatTensor of size 4x3]

resize1d 1 1 1
[torch.FloatTensor of size 3]

resize2d 1 1 1
1 1 1
[torch.FloatTensor of size 2x3]

resize 1 1 1
1 1 1
1 1 1
1 1 1
[torch.FloatTensor of size 4x3]

PyTorch.FloatTensor(3,2).nElement() : 6
PyTorch.FloatTensor().nElement() : 0
PyTorch.FloatTensor(1).nElement() : 1
D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.LongTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.LongTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.LongTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.LongTensor of size 5x3]

1 1 1 1
1 1 1 0
1 1 1 1
[torch.LongTensor of size 3x4]

2 1 1 1
2 1 2 4
1 3 2 6
[torch.LongTensor of size 3x4]

1 1 1 2
1 1 2 2
1 1 1 1
[torch.LongTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.LongTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.LongTensor of size 3x4]

<class 'floattensor.LongTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.LongTensor of size 4x3]

resize1d 1 1 1
[torch.LongTensor of size 3]

resize2d 1 1 1
1 1 1
[torch.LongTensor of size 2x3]

resize 1 1 1
1 1 1
1 1 1
1 1 1
[torch.LongTensor of size 4x3]

PyTorch.LongTensor(3,2).nElement() : 6
PyTorch.LongTensor().nElement() : 0
PyTorch.LongTensor(1).nElement() : 1
