initializing PyTorch...
generator null: False
 ... PyTorch initialized
C [[ 0.6527096   0.77350652  0.68296158  0.62305439]
 [ 0.35589284  0.40133065  0.35578546  0.30580544]
 [ 0.44841224  0.60022312  0.52513206  0.54231435]]
calling .asTensor...
 ... asTensor called
tensorA 0.664835 0.934435
0.315186 0.527439
0.616167 0.581534
[torch.FloatTensor of size 3x2]

tensorA 0.664835 0.934435
0.315186 56.4
76.5 0.581534
[torch.FloatTensor of size 3x2]

A [[  0.66483521   0.93443519]
 [  0.31518596  56.40000153]
 [ 76.5          0.58153421]]
add 5 to tensorA
tensorA 5.66483 5.93444
5.31519 61.4
81.5 5.58153
[torch.FloatTensor of size 3x2]

A [[  5.66483498   5.93443537]
 [  5.31518602  61.40000153]
 [ 81.5          5.58153439]]
add 7 to tensorA
tensorA2 12.6648 12.9344
12.3152 68.4
88.5 12.5815
[torch.FloatTensor of size 3x2]

tensorA 5.66483 5.93444
5.31519 61.4
81.5 5.58153
[torch.FloatTensor of size 3x2]

tensorAB 4.44604 5.75937 5.05076 5.05846
34.8877 28.2982 25.9013 11.6405
20.0646 50.1385 42.4193 62.9225
[torch.FloatTensor of size 3x4]

A.dot(B) [[  4.44604397   5.75936508   5.05076218   5.05846405]
 [ 34.88766479  28.298172    25.90128708  11.64053726]
 [ 20.06460381  50.13853836  42.41933441  62.92251587]]
tensorA[2] 81.5 5.58153
[torch.FloatTensor of size 2]

D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.FloatTensor of size 5x3]

0.647983 0.47495 0.484418 0.643436
0.688638 0.440826 0.33645 0.554025
0.400663 0.568312 0.865148 0.505461
[torch.FloatTensor of size 3x4]

0 0 1 1
0 0 0 0
1 1 1 1
[torch.FloatTensor of size 3x4]

-0.326851 0.236079 0.437873 0.317578
0.467206 0.676829 0.737193 1.00153
0.476695 -0.623984 -0.608532 0.162024
[torch.FloatTensor of size 3x4]

-3.03959 1.18172 -24.3797 -1.80868
2.06382 0.699525 -5.97182 -3.24497
1.3034 -3.13251 2.86235 -1.78552
[torch.FloatTensor of size 3x4]

1.16214 0.588476 0.53297 0.109133
0.507801 1.62671 0.943188 0.494579
0.599024 0.24135 0.564803 1.80735
[torch.FloatTensor of size 3x4]

0.325214 0.264391 1.41606 0.0216989
1.10695 15.0896 0.0439393 0.327464
3.10177 0.314284 0.0568305 0.48173
[torch.FloatTensor of size 3x4]

2 4 1 1
2 2 4 1
3 5 1 1
[torch.FloatTensor of size 3x4]

1 1 4 2
1 1 3 2
5 5 1 2
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

<class 'floattensor.FloatTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.FloatTensor of size 4x3]

resize1d -1 -1 -1
[torch.FloatTensor of size 3]

resize2d -1 -1 -1
-1 -1 -1
[torch.FloatTensor of size 2x3]

resize -1 -1 -1
-1 -1 -1
-1 -1 -1
-1 -1 -1
[torch.FloatTensor of size 4x3]

PyTorch.FloatTensor(3,2).nElement() : 6
PyTorch.FloatTensor().nElement() : 0
PyTorch.FloatTensor(1).nElement() : 1
