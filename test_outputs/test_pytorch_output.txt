initializing PyTorch...
generator null: False
 ... PyTorch initialized
D 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 5x3]

D 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 4.0
1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 5x3]

D 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 4.0
9.0 9.0 9.0
1.0 1.0 1.0
[torch.DoubleTensor of size 5x3]

D 1.0 1.0 0.0
1.0 1.0 0.0
1.0 1.0 0.0
9.0 9.0 0.0
1.0 1.0 0.0
[torch.DoubleTensor of size 5x3]

0.233799332054 0.762590355007 0.094121881295 0.287974107778
0.141355928034 0.972210827749 0.927607386606 0.666749998694
0.545211852295 0.790965839289 0.954910162138 0.322313791374
[torch.DoubleTensor of size 3x4]

-1.48109472991 -0.801194737537 -0.423864249719 1.16978492313
2.61906195315 0.388388794325 -0.391243297201 0.219303440533
0.2015187822 1.45932317331 0.50377353731 -0.345590230458
[torch.DoubleTensor of size 3x4]

-0.499100785827 0.838443829327 -1.05567008037 2.12718397811
79.6392181797 -0.925063188812 0.751088688941 21.3940034091
2.27157803596 -20.8474763344 -5.52930700338 1.05274969207
[torch.DoubleTensor of size 3x4]

0.421342310945 0.437081673938 1.02364138264 1.3288324466
1.1371894148 0.509794047893 1.04860357347 0.164458975061
0.691890874092 0.24673993202 0.0359059043026 0.510571001782
[torch.DoubleTensor of size 3x4]

0.612398317032 0.62228334302 0.409248370767 0.021912884004
1.25262385782 0.0487785903717 0.171868666245 0.74333200882
0.980952398468 0.0439362514603 0.0891042069027 0.105027428539
[torch.DoubleTensor of size 3x4]

1.0 0.0 1.0 0.0
1.0 0.0 1.0 1.0
1.0 0.0 0.0 0.0
[torch.DoubleTensor of size 3x4]

1.0 2.0 3.0 6.0
1.0 4.0 1.0 1.0
1.0 1.0 1.0 1.0
[torch.DoubleTensor of size 3x4]

2.0 2.0 1.0 1.0
1.0 1.0 2.0 1.0
1.0 1.0 3.0 3.0
[torch.DoubleTensor of size 3x4]

2.0 1.0 2.0 3.0
1.0 1.0 2.0 2.0
4.0 1.0 4.0 1.0
[torch.DoubleTensor of size 3x4]

2.0 1.0 2.0 3.0
1.0 1.0 2.0 2.0
4.0 1.0 4.0 1.0
[torch.DoubleTensor of size 3x4]

<class 'floattensor.DoubleTensor'>
D after resize:
 1.0 1.0 0.0
1.0 1.0 0.0
1.0 1.0 0.0
9.0 9.0 0.0
[torch.DoubleTensor of size 4x3]

resize1d 1.0 1.0 1.0
[torch.DoubleTensor of size 3]

resize2d 1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 2x3]

resize 1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
1.0 1.0 1.0
[torch.DoubleTensor of size 4x3]

PyTorch.DoubleTensor(3,2).nElement() : 6
PyTorch.DoubleTensor().nElement() : 0
PyTorch.DoubleTensor(1).nElement() : 1
D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.ByteTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.ByteTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.ByteTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.ByteTensor of size 5x3]

1 1 1 1
1 1 1 0
1 1 1 1
[torch.ByteTensor of size 3x4]

2 1 1 1
2 1 2 4
1 3 2 6
[torch.ByteTensor of size 3x4]

1 1 1 2
1 1 2 2
1 1 1 1
[torch.ByteTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.ByteTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.ByteTensor of size 3x4]

<class 'floattensor.ByteTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.ByteTensor of size 4x3]

resize1d 1 1 1
[torch.ByteTensor of size 3]

resize2d 1 1 1
1 1 1
[torch.ByteTensor of size 2x3]

resize 1 1 1
1 1 1
1 1 1
1 1 1
[torch.ByteTensor of size 4x3]

PyTorch.ByteTensor(3,2).nElement() : 6
PyTorch.ByteTensor().nElement() : 0
PyTorch.ByteTensor(1).nElement() : 1
C [[ 0.57402074  1.1707828   1.3661443   0.82390058]
 [ 0.8427766   1.1033088   1.22483659  0.67718637]
 [ 0.33052829  0.76944661  0.90752572  0.55683351]]
calling .asTensor...
 ... asTensor called
tensorA 0.625157 0.955393
0.927014 0.495059
0.358555 0.690625
[torch.FloatTensor of size 3x2]

tensorA 0.625157 0.955393
0.927014 56.4
76.5 0.690625
[torch.FloatTensor of size 3x2]

A [[  0.62515676   0.95539337]
 [  0.92701435  56.40000153]
 [ 76.5          0.69062454]]
add 5 to tensorA
tensorA 5.62516 5.95539
5.92701 61.4
81.5 5.69062
[torch.FloatTensor of size 3x2]

A [[  5.62515688   5.95539331]
 [  5.92701435  61.40000153]
 [ 81.5          5.69062471]]
add 7 to tensorA
tensorA2 12.6252 12.9554
12.927 68.4
88.5 12.6906
[torch.FloatTensor of size 3x2]

tensorA 5.62516 5.95539
5.92701 61.4
81.5 5.69062
[torch.FloatTensor of size 3x2]

tensorAB 5.14093 8.72127 9.99721 5.85294
5.91986 47.0372 58.4398 38.7365
73.7488 71.0235 74.8048 37.183
[torch.FloatTensor of size 3x4]

A.dot(B) [[  5.14093256   8.72127151   9.99721336   5.85293865]
 [  5.9198575   47.0371933   58.43975067  38.7364502 ]
 [ 73.74884796  71.02352905  74.80475616  37.18298721]]
tensorA[2] 81.5 5.69062
[torch.FloatTensor of size 2]

D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.FloatTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.FloatTensor of size 5x3]

0.125585 0.0406307 0.207243 0.247888
0.0514672 0.0935515 0.44081 0.694824
0.0298762 0.14537 0.456833 0.453172
[torch.FloatTensor of size 3x4]

-0.41263 -0.561561 -0.166406 0.919743
-0.520665 -1.04209 -1.86076 -1.19507
1.68462 0.255782 -2.51445 -0.97466
[torch.FloatTensor of size 3x4]

-0.943492 -0.31674 -0.273227 0.167324
-0.808787 -0.696445 0.694108 0.279047
-0.189283 -0.854515 -1.86217 -0.143578
[torch.FloatTensor of size 3x4]

0.786687 1.41744 1.51556 1.70139
0.365807 0.297847 0.250975 2.23554
0.490976 1.26735 2.75488 0.0208299
[torch.FloatTensor of size 3x4]

0.897022 0.402322 0.26393 0.165471
2.96383 0.119081 0.922968 0.155653
0.171086 1.12825 1.33951 0.916772
[torch.FloatTensor of size 3x4]

0 0 0 0
1 1 1 1
1 0 1 0
[torch.FloatTensor of size 3x4]

1 2 1 1
1 2 3 2
2 3 1 3
[torch.FloatTensor of size 3x4]

1 1 1 1
1 3 1 1
2 3 1 2
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.FloatTensor of size 3x4]

<class 'floattensor.FloatTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.FloatTensor of size 4x3]

resize1d 1 1 1
[torch.FloatTensor of size 3]

resize2d 1 1 1
1 1 1
[torch.FloatTensor of size 2x3]

resize 1 1 1
1 1 1
1 1 1
1 1 1
[torch.FloatTensor of size 4x3]

PyTorch.FloatTensor(3,2).nElement() : 6
PyTorch.FloatTensor().nElement() : 0
PyTorch.FloatTensor(1).nElement() : 1
D 1 1 1
1 1 1
1 1 1
1 1 1
1 1 1
[torch.LongTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
1 1 1
1 1 1
[torch.LongTensor of size 5x3]

D 1 1 1
1 1 1
1 1 4
9 9 9
1 1 1
[torch.LongTensor of size 5x3]

D 1 1 0
1 1 0
1 1 0
9 9 0
1 1 0
[torch.LongTensor of size 5x3]

1 1 1 1
1 1 1 0
1 1 1 1
[torch.LongTensor of size 3x4]

2 1 1 1
2 1 2 4
1 3 2 6
[torch.LongTensor of size 3x4]

1 1 1 2
1 1 2 2
1 1 1 1
[torch.LongTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.LongTensor of size 3x4]

2 1 2 3
1 1 2 2
4 1 4 1
[torch.LongTensor of size 3x4]

<class 'floattensor.LongTensor'>
D after resize:
 1 1 0
1 1 0
1 1 0
9 9 0
[torch.LongTensor of size 4x3]

resize1d 1 1 1
[torch.LongTensor of size 3]

resize2d 1 1 1
1 1 1
[torch.LongTensor of size 2x3]

resize 1 1 1
1 1 1
1 1 1
1 1 1
[torch.LongTensor of size 4x3]

PyTorch.LongTensor(3,2).nElement() : 6
PyTorch.LongTensor().nElement() : 0
PyTorch.LongTensor(1).nElement() : 1
